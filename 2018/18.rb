require 'pry'
require './summed_area.rb'

def cmap
  @cmap ||= {
    '.' => 0,  # open
    '|' => 1, # tree
    '#' => 10 # lumberyard
  }
end

def charmap
  @charmap ||= cmap.invert
end

def build_matrix(input)
  lines = input.chomp.split("\n")
  rows = lines.size
  cols = lines.first.chars.size

  arr = Matrix.zero(rows + 2, cols + 2).to_a

  lines.each_with_index do |line, i|
    line.chars.each_with_index do |c, j|
      arr[i + 1][j + 1] = cmap[c]
    end
  end

  Matrix[*arr]
end

def generation(matrix)
  cols = matrix.column_count
  rows = matrix.row_count
  res = Matrix.zero(cols, rows).to_a
  matrix.each_with_index do |el, row, col|
    # skip the padding
    next if row.zero? || col.zero?
    next if row == cols - 1 || col == rows - 1

    score = matrix.summed_area(row - 1, col - 1, row + 1, col + 1) - el

    new_el = case el
             when 0
               score % 10 >= 3 ? 1 : el
             when 1
               score >= 30 ? 10 : el
             when 10
                score >= 10 && score % 10 >= 1 ? 10 : 0
              end

    res[row][col] = new_el
  end

  Matrix[*res]
end

def print_m(matrix)
  matrix.to_a.each do |line|
    line.each do |x|
      print charmap[x]
    end
    print "\n"
  end
end

def run(matrix, steps, cycle = false)
  seen = Hash.new(0)
  start_cycle = 0
  end_cycle = 0
  i = 1
  steps.times do
    matrix = generation(matrix)
    seen[matrix] += 1
    start_cycle = i if seen[matrix] == 2 && start_cycle == 0
    end_cycle = i if seen[matrix] == 3 && end_cycle == 0
    break if end_cycle > 0 && cycle
    i += 1
  end

  if end_cycle > 0 && cycle
    steps_remaining = steps - i
    cycle_size = end_cycle - start_cycle

    ss = steps_remaining % cycle_size

    ss.times do
      matrix = generation(matrix)
    end
  end

  trees = yards = 0
  matrix.each do |i|
    trees += 1 if i == 1
    yards += 1 if i == 10
  end

  print_m(matrix);
  puts trees * yards
  seen
end


input = <<-'INPUT'
.#.#...|#.
.....#|##|
.|..|...#.
..|#.....#
#.#|||#|#|
...#.||...
.|....|...
||...#|.#|
|.||||..|.
...#.|..|.
INPUT

m = build_matrix(input)

run(m, 10)

puts '-------------------------'

data = DATA.read
matrix = build_matrix(data)

run(matrix, 1000000000, true)

puts "BYE"

__END__
.|....|.##.#..|.#....|.#...#..#.#..|.|........#|#|
#....#...|..|#|....#.......#||#...#..|...###...#.#
......|#.|#....#...|...##|...|..#|#...#..#...#....
....|....|....#||...|.....|....|.|.#...##...|#.||#
...||..||.||..|...|.#.#.|##||...|#..|||.#|.|..|.|#
||..#.|...#..#.....|..#...|.#.#..#.#......||.|.#..
...||##..#|....#|||#|.|.#..|.|.....|.#.#.||#|....#
##..........|###..||...#....|##..#|...|||.....#|.#
.##|...|#.|..|......#...||##.#....|..#.....#..##..
.|..|#|...|#.#..|###.|..##.#...|........|.#.|..#..
.##....#|.......|..||##..|..|.|##|.#|....#|....|..
..#|#..|.......||.|..#..|..#..##..||.......###..|#
...##..|..#|....|....#.||..|..#.#....#|..#.#...#..
.#..|...#.|...##.|#.......#|#...#.......|..#....|#
#.##...|....||.||##||.|...#.#...#.#..|..#...#..#||
........||#.#..||.||..|..#.##......||..##.|#..|.|.
.....|.....#....|...#...#...||.##..|..#.........|.
.#....|.##....||.....#..||.|..##.||.|..###.....#..
#...#||||...|...#.|......|.#.###||.##|...|.....#|.
.....##.#.#...........|##.....#.....#..|...#|#.|#|
.|###.|.||.|.|#|.|#....|#.|....#||#...#....##..#..
...||..#..|.|........||...|..#..#..#..#.|#...||.|.
..||..|||.|........#.....|.....|....|.|...||.|#..#
#.#.###..|||..|#.#|#....#.|..|..........#....||#.|
.#..#..||||#....#....#|..........#...#.#.##.###|..
...#..|.|.||..|..##.|.#.|#....|.#..||..|.#..#|#...
.#.#.|..|..|#..|.|........|.##..|..##||#.#.|...|.|
|.....##.|...###||.##||.|#........#.|##.#..#...#|#
|..##.||##..#.|....||##...#..#....|..............#
#..#|..#|........|#.#|..#|..|......|..#|.......|..
|...|.#.#.||..|...|#...#.||#.||......##......##.#|
.....#|#.#||#.|.|..||#|##.|#|...||.#.#|.#......||#
..|.|..#|#...|#..#...|...|#..|.#.|.#.#.#.##.......
...|#|.|#.|..|..|....|##|#....#....|......#.||...#
.|...|..#.||#|#....#...|.....|.|....#|.#....#||##.
.....#.#...#.|.#|.|.##|||..|.#..|.||#..#...#..#.##
..||....#..|..|....##.#|#....|.#.|......|#.|#...##
#|....|..||..|.......|#...#|....##..|..|||..#...#.
.#...#....###||..|||...|..##...#|||......##||#.#..
|.||##.#..||..|||.........#|..|.#.|.|.#.|....|#|#|
.|..#||..#.|#.#|..|....#.....#|..##|#..#||#.#...##
...#||....|....#.....#||.#||..#|.##......|..#.....
|..|...#|......|||....#...#......##.#.##.....#....
.....#....|....###......|#||.#.....#.|..#...|....#
.|.|#...#|..|||....#....#.|#...|.#.#...#...#.|..|.
.|.|.....#.#.|##.....#...#..|....#.|..|##..#.#....
.#|..|...#..|...|..#|||.|..#.#..|.||....#.#|...#..
|.|#|.#.....||####..#.#..#|.##.#|....#||.....|.|.|
.|...#|.|.||||..#.|....|.....|.|#|#....|.....#..|#
.#.......|#.#..#...#.#.....#..|.#|.|#.#|...|#|||#.
